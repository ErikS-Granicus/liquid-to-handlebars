
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
  "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <link rel="stylesheet" href="style.css" type="text/css" media="screen" title="no title" charset="utf-8" />
  <link rel="shortcut icon" type="image/x-icon" href="http://cheat.markdunkley.com/favicon.ico" >
<link rel="stylesheet" href="print.css" type="text/css" media="print" />
<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.3.2/jquery.min.js"></script>
<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jqueryui/1.7.2/jquery-ui.min.js"></script>
<script src="cookie.js" type="text/javascript" charset="utf-8"></script>
  <script src="cufon.js" type="text/javascript" charset="utf-8"></script>
  <script src="Avenir_LT_Std_300-Avenir_LT_Std_700.font.js" type="text/javascript" charset="utf-8"></script>
  <script src="cookiesheet.js" type="text/javascript" charset="utf-8"></script>
  <title>Shopify Cheat Sheet</title>
</head>
<body>
<div id="wrapper">
  <div class="navigation">
    <img src="logo.png" width="187" height="32" alt="Logo" />
    <a class="edit-mode" href="#" title="Feedback">Edit sheet</a>
    <ul>
      <li><a href="http://forums.shopify.com/">Forums</a></li>
      <li><a href="http://wiki.shopify.com/Main_Page">Wiki</a></li>
      <li><a href="http://guide.markdunkley.com">Guide</a></li>
      <li class="feedback"><a href="http://forums.shopify.com/categories/1/posts/30266" title="Feedback">Feedback</a></li>
    </ul>
  </div><!-- .navigation -->
<div id="container" >
    <div class="content">
      <div class="col-3" id='col1'>
            <div class="block" id='liquid'>
              <h2>Liquid </h2>
              <hr />
              <h3>Logic</h3>
              <dl>
                <dt>{% comment %}</dt>
                <dd>
                  <em>Comments will not be completely hidden</em>
                  <div class="example">
                    <code>My name is {% comment %}Mark{% endcomment %} Dunkley</code>
                    <code class="output">My name is Dunkley</code>
                  </div><!-- .example -->
                </dd>
                <dt>{% if user %}</dt>
                <dd>
                 <em>"If" statements let you determine if something is true or not</em>
                 <div class="example">
                   if [username is "elvis"]
                   <code>{% if user.name == 'elvis' %}<br />
                     hey Elvis<br />
                   {% endif %}</code>
                   <code class="output">hey Elvis</code>
                   if else [username is not "elvis"]
                   <code>{% if user.name != 'elvis' %} <br />
                     hey ugly<br />
                   {% endif %}</code>
                   <code class="output">hey ugly</code>
                 </div><!-- .example -->
                </dd>
                <dt>{% unless %}</dt>
                <dd><em>If not true, then it will do something</em>
                <div class="example">
                  username is not "elvis"
                   <code>{% unless user.name == 'elvis' %} <br />
                     hey ugly<br />
                   {% endunless %} </code>
                   <code class="output">hey ugly</code>
                </div><!-- .example" -->
                </dd>
                <dt>{%% case %}</dt>
                <dd>
                  <em>Used when you have consistent cases of something</em>
                  <div class="example">
                    case [handle is 'cookie']
                    <code>{% case handle %} <br />
                    {% when 'cake' %}<br />
                         This is a cake<br />
                    {% when 'cookie' %}<br />
                         This is a cookie<br />
                    {% when 'foo' %}<br />
                         This is a foo<br />
                    {% when 'bar' %}<br />
                         This is a bar<br />
                    {% else %}<br />
                         This is not a cookie/cake<br />
                    {% endcase %}</code>
                    <code class="output">This is a cookie</code>
                  </div><!-- .example -->
                </dd>
                <dt>{% cycle %}</dt>
                <dd>
                  <em>Use when you need to alternate between something.</em>
                  <div class="example">
                    Basic example
                    <code>{% cycle 'one', 'two' %}<br />
                    {% cycle 'one', 'two' %}<br />
                    {% cycle 'one', 'two' %}
                    </code>
                    <code class="output">one<br />two<br />one</code>
                    Group cycles
                    <code>{% cycle 'group 1': 'one', 'two', 'three' %}<br />
                    {% cycle 'group 1': 'one', 'two', 'three' %}<br />
                    {% cycle 'group 2': 'one', 'two', 'three' %}<br />
                    {% cycle 'group 2': 'one', 'two', 'three' %}<br />
                    </code>
                    <code class="output">one
                    two
                    one
                    two
                    </code>
                  </div><!-- .example -->
                </dd>
                <dt>
                  {% for %}
                </dt>
                <dd>
                 <em> Use "for loops" if you want to repeat/test something over and over</em>
                  <div class="options">
                    Loop options
                    <ul>
                      <li>limit:</li>
                      <li>offset:</li>
                    </ul>
                  </div><!-- .options -->
                  <div class="example">
                    For Loop [product are: hat, pez, pad]
                    <code>{% for product in collection.products %} <br />
                       {{ product.name }},<br />
                     {% endfor %}
                    </code>
                    <code class="output">hat, pez, pad,</code>
                    Limit [product are: hat, pez, pad]
                    <code>{% for product in collection.products limit:2 %} <br />
                       {{ product.name }},<br />
                     {% endfor %}
                    </code>
                    <code class="output">hat, pez,</code>
                  </div><!-- .example -->
                </dd>
                <dt>{% tablerow %}</dt>
                <dd>
                 <em> Generate table rows/cells</em>
                 <div class="options">
                   You have a few options
                   <ul>
                    <li>cols:</li>
                    <li>limit:</li>
                   </ul>
                 </div><!-- .options -->
                 <div class="example">
                   Example [products are: hat, pez, pad]
                  <code> &lt;table&gt;<br />{{% tablerow product in collection.products cols: 2 %}<br />
                       &lt;td&gt;<br />
                       {{ product.title }}<br />
                       &lt;/td&gt;<br />
                     {% endtablerow %}<br />
                     &lt;/table&gt;</code>
                     <code class="output">
                      &lt;table&gt;<br />
                        &lt;tr&gt;<br />
                          &lt;td&gt;hat&lt;/td&gt;<br />
                          &lt;td&gt;pez&lt;/td&gt;<br />
                        &lt;/tr&gt;<br />
                        &lt;tr&gt;<br />
                          &lt;td&gt;pad&lt;/td&gt;<br />
                        &lt;/tr&gt;<br />
                      &lt;/table&gt;<br />
                     </code>
                 </div><!-- .example -->
                </dd>
                <dt>{% assign %}</dt>
                <dd>
                 <em>Create variables</em>
                 <div class="example">
                   <code>{% assign myvariable = false %}<br />
                   {% if myvariable != true %}<br />
                     The if statement is valid<br />
                   {% endif %}</code>
                   <code class="output">The if statement is valid</code>
                 </div><!-- .example -->
                </dd>
                <dt>{% include %}</dt>
                <dd>
                  <em>Insert a snippet into your layout</em>
                  <div class="example">
                    Within the snippet color.liquid
                    <code>color: '{{ color }}'<br />
                    shape: '{{ shape }}'<br />
                    </code>
                    Within the template index.liquid
                    <code>
                    {% assign shape = 'circle' %}<br />
                    {% include 'color' %}<br />
                    {% include 'color' with 'red' %}<br />
                    {% include 'color' with 'blue' %}<br />
                    {% assign shape = 'square' %}<br />
                    {% include 'color' with 'red' %}</code>
                    <code class="output">
                      color: ''<br />
                      shape: 'circle'<br />
                      color: 'red'<br />
                      shape: 'circle'<br />
                      color: 'blue'<br />
                      shape: 'circle'<br /><br />
                      color: 'red'<br />
                      shape: 'square'<br />
                    </code>
                  </div><!-- .example -->
                </dd>
              </dl>
              <hr />
              <h3>Operators</h3>
              <dl>
                <dt>== !- &gt; &lt; &gt;= &lt;= or and </dt><dd>
                  <em>You can use operators in all the above logic statements</em>
                  <div class="options">
                  <ul>
                    <li><strong>==</strong> equal</li>
                    <li><strong>!-</strong> not equal</li>
                    <li><strong>&gt;</strong> bigger than</li>
                    <li><strong>&lt;</strong> less than</li>
                    <li><strong>&gt;=</strong> bigger or equal</li>
                    <li><strong>&lt;=</strong> less or equal</li>
                    <li><strong>or</strong> this or that</li>
                    <li><strong>and</strong> must be this and that</li>
                  </ul></div>
                </dd>
              </dl>
                 <ul class="section-options">
                    <li><a class="wiki" href="http://wiki.shopify.com/UsingLiquid" title="Using liquid - Shopify Wiki" >wiki</a></li>
                    <li><a class="move" href="http://everpixel.com"><img src="icn-move.png" width="11" height="11" alt="Icn Move" /></a></li>
                  </ul>
            </div><!-- .block -->
               <div class="block" id='images'>
                  <h2>Images</h2>
                  <hr />
                  <h3>sizes</h3>
                <ul>
                   <li>16x16 <em>pico</em></li>
                  <li>32x32 <em>icon</em></li>
                  <li>50x50 <em>thumb</em></li>
                  <li>100x100 <em>small</em></li>
                  <li>240x240 <em>medium</em></li>
                  <li>480x480 <em>large</em></li>
                  <li>600x600 <em>grande</em></li>
                  <li>1024x1024 <em>original size</em></li>
                 </ul>
                  <ul class="section-options">
                     <li><a class="wiki" href="http://wiki.shopify.com/HowToDisplayAnImage" title="Using liquid - Shopify Wiki" >wiki</a></li>
                     <li><a class="move" href="http://everpixel.com"><img src="icn-move.png" width="11" height="11" alt="Icn Move" /></a></li>
                   </ul>
                </div><!-- .block -->
                <div class="block" id='essentials'>
                  <h2>Essentials</h2>
                  <hr />
                  <dl>
                    <dt>What is liquid and what are tags</dt>
                    <dd>
                      <em>We use liquid to generate our code. There are 2 types</em>
                      <div class="example">
                        Will output something
                        <code>
                        {{ 'output me' }}</code>
                        <code class="output">output me</code>
                        Logic statement
                        <code>{% logic %}</code>
                      </div><!-- .example -->
                    </dd>
                    <dt>What is a handle?</dt>
                    <dd>
                      <em>A <strong>handle</strong> is how we name our elements (collections, products, blogs, etc)</em>
                    </dd>
                  </dl>
                      <ul class="section-options">
                        <li><a class="wiki" href="http://wiki.shopify.com/UsingLiquid" title="Using liquid - Shopify Wiki" >wiki</a></li>
                        <li><a class="move" href="http://everpixel.com"><img src="icn-move.png" width="11" height="11" alt="Icn Move" /></a></li>
                      </ul>
                    </div><!-- .block -->
                <div class="block" id='helpers'>
                  <h2>Helpers</h2>
                  <hr />
                  <dl>
                    <dt>
                      forloop.length
                    </dt>
                    <dd>
                      <em>length of the entire for loop</em>
                    </dd>
                    <dt>
                       forloop.index
                    </dt>
                    <dd>
                      <em>index of the current iteration</em>
                    </dd>
                    <dt>
                       forloop.index0
                    </dt>
                    <dd>
                       <em>index of the current iteration</em>
                    </dd>
                    <dt>
                       forloop.rindex
                    </dt>
                    <dd>
                      <em>how many items are still left?</em>
                    </dd>
                    <dt>
                      forloop.rindex0
                    </dt>
                    <dd>
                      <em>how many items are still left?</em>
                    </dd>
                    <dt>
                      forloop.first
                    </dt>
                    <dd>
                      <em>is this the first iteration?</em>
                    </dd>
                    <dt>
                      forloop.last
                    </dt>
                    <dd>
                      <em>is this the last iteration? </em>
                    </dd>
                  </dl>
                  <ul class="section-options">
                      <li><a class="wiki" href="http://wiki.shopify.com/Liquid" title="Using liquid - Shopify Wiki" >wiki</a></li>
                      <li><a class="move" href="#"><img src="icn-move.png" width="11" height="11" alt="Icn Move" /></a></li>
                    </ul>
                </div><!-- .block -->
          </div><!-- . col-3 -->
          <div class="col-3" id='col2'>
             <div class="block" id='filter2'>
                <h2>Filters</h2>
                <hr />
                  <dl>
                    <dt>asset_url</dt>
                    <dd>
                      <em>Gives you the url for an asset</em>
                      <div class="example"><code>{{ 'shop.css' | asset_url }}</code></div>
                    </dd>
                    <dt>camelize</dt>
                    <dd>
                      <em>Converts the text into CamelCase</em>
                      <div class="example">
                        <code>{{ 'camel case' | camelize }}</code>
                        <code class="output">CamelCase</code>
                      </div><!-- .example -->
                    </dd>
                    <dt>capitalize</dt>
                    <dd>
                      <em>Capitalizes the text</em>
                      <div class="example">
                        <code>{{ 'capitalize me' | capitalize }}</code>
                        <code class="output">Capitalize Me</code>
                      </div><!-- .example -->
                    </dd>
                    <dt>default_pagination</dt>
                    <dd>
                      <em>used in conjunction with the {{ paginate }} liquid tag</em>
                    </dd>
                    <dt>global_asset_url</dt>
                    <dd>
                      <em>Returns the url for a global asset (global assets are faster than regular asset_url)</em>
                      <div class="example">
                        <code>{{ 'image.png' | global_asset_url }}</code>
                      </div><!-- .example -->
                    </dd>
                    <dt>handleize</dt>
                    <dd>
                      <em>Strips and converts special characters (%@*$...etc) out of the string, so you can use the text in a url</em>
                      <div class="example">
                        <code>{{ '100% M&amp;Ms!!!' | handleize }}</code>
                        <code class="output">100-m-ms </code>
                      </div><!-- .example -->
                    </dd>
                    <dt>img_tag</dt>
                    <dd>
                        <em>Generates an img tag</em>
                        <div class="example">Basic usage
                        <code>{{ 'image-name.gif' | asset_url | img_tag }}</code>
                        <code class="output">&lt;img src=&quot;http://static.shopify.com/s/files/1/0036/9672/assets/image-name.gif?1255697690&quot; alt=&quot;&quot; /&gt;</code>
                        To add alt text:
                        <code>{{ 'image-name.gif' | asset_url | img_tag:'whatever alt text' }}</code></div>
                    </dd>
                  <dt>link_to</dt>
                  <dd>
                   <em>Generates a html link</em>
                   <div class="example">
                     Simple
                     <code>{{ 'Click' | link_to: 'http://markdunkley.com' }}</code>
                     <code class="output">&lt;a href=&quot;http://markdunkley.com&quot; &gt;Click&lt;/a&gt;</code>
                     Add a title
                     <code>{{ 'Click' | link_to: 'http://markdunkley.com','Title text' }}</code>
                     <code class="output">&lt;a href=&quot;http://markdunkley.com&quot; title=&quot;Title text&quot;&gt;Click&lt;/a&gt;</code>
                   </div><!-- .example -->
                  </dd>
                  <dt>link_to_vendor</dt>
                  <dd>
                    <em>Generates a html link to the vendor of the product</em>
                    <div class="example">
                      <code>{{ "Pepsi" | link_to_vendor }}</code>
                      <code class="output">&lt;a title=&quot;Pepsi&quot; href=&quot;/collections/vendors?q=Pepsi&quot;&gt;Pepsi&lt;/a&gt;</code>
                    </div><!-- .example -->
                  </dd>
                  <dt>link_to_type</dt>
                  <dd>
                    <em>Generates a html link to the type of the product</em>
                    <div class="example">
                    <code>{{ "Cola" | link_to_vendor }}</code>
                    <code class="output">&lt;a title=&quot;Cola&quot; href=&quot;/collections/vendors?q=Cola&quot;&gt;Cola&lt;/a&gt;</code>
                     </div><!-- .example -->
                  </dd>
                  <dt>link_to_tag*</dt>
                  <dd>
                      <em>This filter creates a link to all products in a collection that have the given tag. </em>
                    <div class="example">
                    <code>{% for tag in collection.tags %}<br />
                       {{ tag | link_to_tag: tag }}<br />
                    {% endfor %}<br />
                    </code>
                    </div><!-- .example -->
                  </dd>
                  <dt>link_to_add_tag*</dt>
                  <dd>
                   <em> This filter creates a link to all products in a collection that have the given tag and all the previous tags that might have been added already. </em>
                    <div class="example">
                     <code> {% for tag in collection.tags %}<br />
                         {{ '+' | link_to_add_tag: tag }} {{ tag }}<br />
                      {% endfor %}<br />
                      </code>
                    </div><!-- .example -->
                  </dd>
                  <dt>link_to_remove_tag*</dt>
                  <dd>
                    <em>This filter creates a link to all products in a collection that have the given tag and all the previous tags that might have been added already. </em>
                    <div class="example">
                      <code>{% for tag in collection.tags %}<br />
                         {{ '+' | link_to_add_tag: tag }} {{ tag }}<br />
                      {% endfor %}<br />
                      </code>
                    </div><!-- .example -->
                  </dd>
                  <dt>highlight_active_tag*</dt>
                  <dd>
                    <em>This filter creates a span with the class active around the tag if it is active</em>
                    <div class="example">
                      <code>{% for tag in collection.tags %}<br />
                         {{ tag | highlight_active_tag | link_to_tag: tag }}<br />
                      {% endfor %}
                      </code>
                    </div><!-- .example -->
                  </dd>
                  <dt>money_with_currency</dt>
                  <dd>
                    <em>Wraps with the currency symbol and abbreviation</em>
                    <div class="example">
                    <code>{{ product.price | money_with_currency }}</code>
                    <code class="output">$19.00 CAD</code>
                    </div><!-- .example -->
                  </dd>
                  <dt>money_without_currency</dt>
                  <dd>
                    <em>Formats the price using a decimal</em>
                    <div class="example">
                    <code>{{ product.price | money_without_currency }}</code>
                    <code class="output">19.00</code>
                    </div><!-- .example -->
                  </dd>
                  <dt>money</dt>
                  <dd>
                    <em>Adds the currency symbol</em>
                    <div class="example">
                      <code>{{ product.price | money }}</code>
                      <code class="output">$19.00</code>
                    </div><!-- .example -->
                  </dd>
                  <dt>plualize</dt>
                  <dd>
                    <em>Specify the pluzalization of the word you need and if the number is greater than 1 it will pluralize it.</em>
                    <div class="example">
                      <code>{{ 1 | pluralize: 'item', 'items' }}</code>
                      <code class="output">items</code>
                      <code>{{ 4 | pluralize: 'item', 'items' }}</code>
                      <code class="output">item</code>
                      <code>{{ cart.item_count | pluralize: 'item', 'items' }}</code>
                      <code class="output">Will output "item" if the number items in the customers cart is 1, if greater/less than 1 it will output "items"</code>
                    </div><!-- .example -->
                  </dd>
                  <dt>product_img_url</dt>
                  <dd>
                    <em>Generates the product img url</em>
                    <div class="example">
                      <code>{{ product.featured_image | product_img_url}}</code>
                      <code class="output">http://static.shopify.com/files/shopify_shirt_small.png?1255</code>
                      Specify the img size
                      <code>{{ product.featured_image | product_img_url: 'thumb' }}</code>
                      <code class="output">http://static.shopify.com/files/shopify_shirt_thumb.png?1255</code>
                    </div><!-- .example -->
                  </dd>
                  <dt>script tag</dt>
                  <dd>
                    <em>Generates a script tag</em>
                    <div class="example">
                      <code>{{ 'shop.js' | asset_url | script_tag }} </code>
                      <code class="output">&lt;script src=&quot;http://static.shopify.com/files/assets/shop.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;</code>
                    </div><!-- .example -->
                  </dd>
                  <dt>stylesheet_tag</dt>
                  <dd>
                    <em>Generates a stylesheet tag</em>
                    <div class="example">
                      <code>{{ 'shop.css' | asset_url | stylesheet_tag }}</code>
                      <code class="output">&lt;link href=&quot;http://static.shopify.com/files/assets/shop.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot; media=&quot;all&quot; /&gt;</code>
                    </div><!-- .example -->
                  </dd>
                  <dt>url_for_type</dt>
                  <dd>
                    <em>This filter creates an url for a type name by transforming it to a handle and adding the appropriate directory in front of it to make the url work.</em>
                    <div class="example"><code>{{ "Used car" | url_for_type }}</code><code class="output">/collections/types?q=Used+car</code></div><!-- .example -->
                  </dd>
                  <dt>url_for_vendor</dt>
                  <dd>
                    <em>This filter creates a url for a vendor name by transforming it to a handle and adding the appropriate directory in front of it to make the url work. </em>
                    <div class="example">
                      <code>{{ "Armani" | url_for_vendor }}</code>
                      <code class="output">/collections/vendor?q=Armani</code>
                    </div><!-- .example -->
                  </dd>
                   <dt>weight_with_unit</dt>
                    <dd>
                      Formats the product variant's weight
                      <div class="example">
                        <code>{{ product.variants.first.weight | weight_with_unit  }}</code>
                        <code class="output">44.0 kg</code>
                      </div><!-- .example -->
                    </dd>
                </dl>
                <ul class="section-options">
                  <li><a class="wiki" href="http://wiki.shopify.com/FilterReference" title="FilterReference - Shopify Wiki" >wiki</a></li>
                  <li><a class="move" href="http://everpixel.com"><img src="icn-move.png" width="11" height="11" alt="Icn Move" /></a></li>
                </ul>
              </div><!-- .block -->
              <div class="block" id='filters'>
                <h2>Liquid Filters</h2>
                <hr />
                <dl>
                  <dt>escape(input) </dt>
                  <dd>
                    <em>Use this filter to escape a string. </em>
                    <div class="example">
                      <code>{{ link.title | escape }}</code>
                      <code class="output"></code>
                    </div><!-- .example -->
                  </dd>
                  <dt>append(input) </dt>
                  <dd>
                    <em>Use this filter to append characters to a string. </em>
                    <div class="example">
                      <code>{{ 'sales' | append: '.jpg' }}</code>
                      <code class="output">sales.jpg</code>
                    </div><!-- .example -->
                  </dd>
                  <dt>prepend(input) </dt>
                  <dd>
                    <em>Use this filter to prepend characters to a string. </em>
                  </dd>
                  <dt>size(input) </dt>
                  <dd>
                    <em>Return the size of an array or string </em>
                    <div class="example">
                      <code>{{ 'this is an 30 character string' | size }}</code>
                      <code class="output">30</code>
                    </div><!-- .example -->
                  </dd>
                  <dt>join(input, segmenter = ' ') </dt>
                  <dd>
                    <em>"joins" an array with the specified character. Example: </em>
                    <div class="example">
                      <code>{{ product.tags | join: ', ' }}</code>
                      <code class="output">tag1, tag2, tag3</code>
                    </div><!-- .example -->
                  </dd>
                  <dt>downcase(input) </dt>
                  <dd>
                    <em>convert a input string to 'downcase' </em>
                  </dd>
                  <dt>upcase(input) </dt>
                  <dd>
                    <em>convert a input string to UPCASE</em>
                  </dd>
                  <dt>strip_html(text) </dt>
                  <dd>
                    <em>This will strip all html tags from the text passed to the block. Very useful in combination with truncate. </em>
                  </dd>
                  <dt>strip_newlines </dt>
                  <dd>
                    <em>Removes all newlines from the input </em>
                  </dd>
                  <dt>truncate(input, characters = 100) </dt>
                  <dd>
                    <em>Truncate a string down to x characters. Take care with truncating text which has html elements in it. In these cases you probably want to run the string through the strip_html filter first (see below).
                    </em>
                  </dd>
                  <dt>truncatewords(input, words = 15) </dt>
                  <dd>
                    <em>Truncate string down to x words </em>
                  </dd>
                  <dt> date(input, format) </dt>
                  <dd>
                    <em>Reformat a date </em>
                    <div class="options">
                      <ul>
                     <li>%a - The abbreviated weekday name (``Sun'')</li>
  <li>%A - The full weekday name (``Sunday'')</li>
  <li>%b - The abbreviated month name (``Jan'')</li>
  <li>%B - The full month name (``January'')</li>
  <li>%c - The preferred local date and time representation</li>
  <li> %d - Day of the month (01..31)</li>
  <li> %H - Hour of the day,24-hour clock (00..23)</li>
  <li>%I - Hour of the day,12-hour clock (01..12)</li>
  <li>%j - Day of the year (001..366)</li>
  <li>%m - Month of the year (01..12)</li>
  <li>%M - Minute of the hour (00..59)</li>
  <li>%p - Meridian indicator (``AM'' or ``PM'')</li>
  <li>%S - Second of the minute (00..60)</li>
  <li>%U - Week number of the current year,
  starting with the first Sunday as the first
  day of the first week (00..53)</li>
  <li>%W - Week number of the current year,
  starting with the first Monday as the first
  day of the first week (00..53)</li>
  <li>%w - Day of the week (Sunday is 0,0..6)</li>
  <li>%x - Preferred representation for the date alone,no time</li>
  <li>%X - Preferred representation for the time alone,no date</li>
  <li>%y - Year without a century (00..99)</li>
  <li>%Y - Year with century</li>
  <li>%Z - Time zone name</li>
  <li>%% - Literal ``%'' character</li>
                            </ul>
                    </div><!-- .example -->
                  </dd>
                  <dt>first(array) </dt>
                  <dd>
                    <em>Get the first element of the passed in array </em>
                    <div class="example">
                      <code>
                      {{ product.images | first | to_img }}
                     </code>
                    </div><!-- .example -->
                  </dd>
                  <dt>last(array) </dt>
                  <dd>
                    <em>Get the last element of the passed in array </em>
                    <div class="example">
                      <code>{{ product.images | last | to_img }}
                      </code>
                    </div><!-- .example -->
                  </dd>
                  <dt>newlines_to_br </dt>
                  <dd>
                    <em>Inserts a &lt;br /&gt; linebreak tag in front of every \n linebreak character. </em>
                  </dd>
                  <dt>replace(input, substring, replacement) </dt>
                  <dd>
                    <em>Will replace all occurrences of a string with another. </em>
                    <div class="example">
                      <code>{{ product.description | replace: 'super', 'mega' }}
                      </code>
                    </div><!-- .example -->
                  </dd>
                  <dt>replace_first(input, substring, replacement) </dt>
                  <dd>
                    <em>Will replace the first occurrence of a string with another. </em>
                    <div class="example">
                      <code>{{ product.description | replace_first: 'super', 'mega' }}
                      </code>
                    </div><!-- .example -->
                  </dd>
                  <dt>remove(input, substring) </dt>
                  <dd>
                    <em>Removes all occurrences of the substring from the input. </em>
                    <div class="example">
                      <code>{{ product.description | remove: 'way too expensive'}}
                      </code>
                    </div><!-- .example -->
                  </dd>
                  <dt>remove_first(input, substring) </dt>
                  <dd>
                    <em>Removes only the first occurrence of the substring from the input. </em>
                    <div class="example">
                      <code>{{ product.description | remove_first: 'remove-me'}}
                      </code>
                    </div><!-- .example -->
                  </dd>
                  <dt>plus(input, operand) </dt>
                  <dd>
                    <em>Gets the result of adding input to operand. When strings are passed, it parses strings as integers before adding. </em>
                    <div class="example">
                      <code>Showing {{ paginate.current_offset }}-{{ paginate.current_offset | plus: paginate.page_size }} items</code>
                    </div><!-- .example -->
                  </dd>
                  <dt>minus(input, operand) </dt>
                  <dd>
                    <em>Gets the result of subtracting input from operand. When strings are passed, it parses strings as integers before adding. </em>
                    <div class="example">
                      <code>{{ product.price | minus: 10 | money_with_currency }}</code>
                    </div><!-- .example -->
                  </dd>
                </dl>
                <ul class="section-options">
                  <li><a class="wiki" href="http://wiki.shopify.com/FilterReference" title="FilterReference - Shopify Wiki" >wiki</a></li>
                  <li><a class="move" href="http://everpixel.com"><img src="icn-move.png" width="11" height="11" alt="Icn Move" /></a></li>
                </ul>
              </div><!-- .block -->
          </div><!-- .col-3 -->
          <div class="col-3" id='col3'>
            <div class="block" id='template2'>
          <h2>Template Objects</h2>
            <hr />
            <h3>blog.liquid </h3>
            <dl>
              <dt>blog.id</dt>
              <dd>
                <em>Returns the id of this blog. </em>
              </dd>
              <dt>blog.handle </dt>
              <dd>
                <em>This is the accessor for this blog. It is usually the blog's title in underscore with every blank space replaced by a hyphen.</em>
              </dd>
              <dt>blog.title </dt>
              <dd>
                <em>Returns the title of this blog (set in Shopify) </em>
              </dd>
              <dt>blog.articles</dt>
              <dd>
                <em>Returns all of the blog's articles. </em>
              </dd>
              <dt>blog.articles_count </dt>
              <dd>
                <em>Returns the count of all of the blog's articles. </em>
              </dd>
              <dt>blog.url</dt>
              <dd>
                <em>Returns the relative URL of the blog.</em>
              </dd>
              <dt>blog.comments_enabled? </dt>
              <dd>
                <em>Returns true if comments are enabled for this blog, false otherwise. </em>
              </dd>
              <dt>blog.moderated? </dt>
              <dd>
                <em>Returns true if this blog is moderated, false otherwise. </em>
              </dd>
            </dl>
            <hr />
            <h3>article.liquid </h3>
            <dl>
              <dt>article.id </dt>
              <dd>
                <em>Returns the id of this article. </em>
              </dd>
              <dt> article.title </dt>
              <dd>
                <em>Returns the title of this article. </em>
              </dd>
              <dt>article.author </dt>
              <dd>
                <em>Returns the name of the author of this article. </em>
              </dd>
              <dt>article.content </dt>
              <dd>
                <em>Returns this article's content (the actual article). </em>
              </dd>
              <dt>article.created_at </dt>
              <dd>
                <em>Returns the date/time of when this article was created. </em>
              </dd>
              <dt>article.url </dt>
              <dd>
                <em>Relative url where the blog can be found. Will append #article-id as anchor so that the page should automatically scroll to the corresponding article.</em>
              </dd>
              <dt>article.comments </dt>
              <dd>
                <em>Returns all published comments for this article if comments are enabled for the blog that this article belongs to. Otherwise, returns an empty array. </em>
              </dd>
              <dt>article.comments_count </dt>
              <dd>
                <em>Returns the number of published comments for this article. </em>
              </dd>
              <dt>article.comment_post_url </dt>
              <dd>
                <em>Relative url where comments are listed for this article. </em>
              </dd>
              <dt>article.comments_enabled? </dt>
              <dd>
                <em>Returns true if comments are enabled for the blog that this article belongs to, otherwise returns false. </em>
              </dd>
              <dt>article.moderated? </dt>
              <dd>
                <em>Returns true if the blog that this article belongs to is moderated, otherwise returns false. </em>
              </dd>
            </dl>
            <dl>
              <dt>comment.id </dt>
              <dd>
                <em>Returns the id of this comment. </em>
              </dd>
              <dt>comment.author </dt>
              <dd>
                <em>Returns the author of this comment. </em>
              </dd>
              <dt>comment.email </dt>
              <dd>
                <em>Returns the e-mail address of the author. </em>
              </dd>
              <dt>comment.content </dt>
              <dd>
                <em>Returns the body of the comment (in html). </em>
              </dd>
              <dt>comment.status </dt>
              <dd>
                <em>Returns the status of the comment. Will be one of 'unapproved', 'published', 'removed', or 'spam'. </em>
              </dd>
              <dt>comment.url </dt>
              <dd>
                <em>Relative url where the article can be found. Will append the comment's id as anchor so that the page should automatically scroll to the corresponding comment. </em>
              </dd>
            </dl>
            <hr />
            <h3>collection.liquid </h3>
            <dl>
              <dt>collection.id </dt>
              <dd>
                <em>Returns the id of this collection </em>
              </dd>
              <dt>collection.title</dt>
              <dd>
                <em>Returns the title of this collection </em>
              </dd>
              <dt>collection.handle</dt>
              <dd>
                <em>Returns this collection's handle, which is by default its title in lowercase. Whitespaces in the original title are replaced by dashes in the handle. The handle of a collection with the title "Winter Sale" would be "winter-sale". </em>
              </dd>
              <dt>collection.description</dt>
              <dd>
                <em>Returns the description of this collection </em>
              </dd>
              <dt>collection.products</dt>
              <dd>
                <em>Returns a collection of all products that are associated with this collection which match the current view. This takes into account things like paginate and selected tags.</em>
              </dd>
              <dt>collection.products_count </dt>
              <dd>
                <em>Returns a count of all of the products in this collection which match the current view. This takes into account things like paginate and selected tags. </em>
              </dd>
              <dt>collection.all_products</dt>
              <dd>
                <em>Returns all products that are associated with this collection. Default limit is 50, use pagination for more products</em>
              </dd>
              <dt>collection.all_products_count </dt>
              <dd>
                <em>Returns a count of all of the products in this collection. </em>
              </dd>
              <dt>collection.tags</dt>
              <dd>
                <em>Returns all tags of all products on in this particular collection which match the current view. This means that if the current view is filtered to only products with a certain tags this variable will hold all the tags these remaining products actually have. </em>
              </dd>
              <dt>collection.all_tags</dt>
              <dd>
                <em>This shows all tags associated with the collection. </em>
              </dd>
              <dt>collection.next_product</dt>
              <dd>
                <em>These methods are available if you scope your product pages to a certain collection.</em>
              </dd>
              <dt>collection.previous_product </dt>
              <dd>
                <em>These methods are available if you scope your product pages to a certain collection.</em>
              </dd>
              <dt>collection.url</dt>
              <dd>
                <em>Returns the url for the specific collection. </em>
              </dd>
            </dl>
            <hr />
            <h3>pages.liquid </h3>
            <dl>
              <dt>page.id </dt>
              <dd>
                <em>Returns the id of this page. </em>
              </dd>
              <dt>page.handle </dt>
              <dd>
                <em>This is the accessor for this page. It is usually the page's title in underscore with every blank space replaced by a dash.</em>
              </dd>
              <dt>page.title </dt>
              <dd>
                <em>Returns the title of this page </em>
              </dd>
              <dt>page.content </dt>
              <dd>
                <em>Returns the content of this page. </em>
              </dd>
              <dt>page.url </dt>
              <dd>
                <em>Relative url where the page can be found. </em>
              </dd>
              <dt>page.author </dt>
              <dd>
                <em>Returns the author of this page. </em>
              </dd>
            </dl>
            <ul class="section-options">
               <li><a class="wiki"href="http://wiki.shopify.com/VariableReference" title="Variable reference - Shopify Wiki" >wiki</a></li>
               <li><a class="move" href="http://everpixel.com"><img src="icn-move.png" width="11" height="11" alt="Icn Move" /></a></li>
             </ul>
                  </div><!-- .block -->
          </div><!-- .col-3 -->
          <div class="col-3 last" id='col4'>
             <div class="block" id='template'>
            <h2>Template Objects</h2>
            <hr />
            <h3>Product.liquid </h3>
            <dl>
              <dt>product.id</dt>
              <dd>
                <em>Returns the id of this product </em>
              </dd>
              <dt>product.title</dt>
              <dd>
                <em>Returns the title of this product
                </em>
              </dd>
              <dt>product.handle</dt>
              <dd>
                <em>Returns the handle of this product </em>
              </dd>
              <dt>product.type</dt>
              <dd>
                <em>Returns the type of this product, e.g. "snowboard", "headphones" </em>
              </dd>
              <dt>product.vendor</dt>
              <dd>
                <em>Returns the vendor of this product, e.g. "Sony", "Apple" </em>
              </dd>
              <dt>product.price</dt>
              <dd>
                <em>Returns the price for this product. By default this is the minimum price. </em>
              </dd>
              <dt>product.price_min</dt>
              <dd>
                <em>Returns the minimum price for this product. </em>
              </dd>
              <dt>product.compare_at_price_min</dt>
              <dd>
                <em>Returns a "compare at" price, e.g. recommended retail price for the least expensive variant of this product. </em>
              </dd>
              <dt>product.price_max</dt>
              <dd>
                <em>Returns the maximum price for this product. </em>
              </dd>
              <dt>product.compare_at_price_max</dt>
              <dd>
                <em>Returns a "compare at" price, e.g. recommended retail price for the most expensive variant of this product. </em>
              </dd>
              <dt>product.price_varies</dt>
              <dd>
                <em>Returns true if the product's variants have varying prices. Returns false if all variants have the same price. </em>
              </dd>
              <dt>product.compare_at_price_varies</dt>
              <dd>
                <em>Returns true if the compare_at_price_min is different from compare_at_price_max</em>
              </dd>
              <dt>product.url</dt>
              <dd>
                <em>Returns the url of this product. You need this for hyperlinking to this product's detail page from anywhere else in the store </em>
              </dd>
              <dt>product.featured_image</dt>
              <dd>
                <em>Returns the filename with a relative path of the featured image. </em>
              </dd>
              <dt>product.images</dt>
              <dd>
                <em>Returns a collection of all image filenames for this product. </em>
              </dd>
              <dt>product.description </dt>
              <dd>
                <em>Returns the description of this product. </em>
              </dd>
              <dt>product.content </dt>
              <dd>
                <em>Alias of product.description. </em>
              </dd>
              <dt>product.variants</dt>
              <dd>
                <em>Returns a collection of all of this product's variants. </em>
              </dd>
              <dt>product.available</dt>
              <dd>
                <em>Returns false if all variants' quantities are zero and their policies are set to "stop selling when sold out". </em>
              </dd>
              <dt>product.collections</dt>
              <dd>
                <em>Returns a list of collections a product is listed in. </em>
              </dd>
              <dt>product.tags</dt>
              <dd>
                <em>Returns a list of the product's tags (represented by simple strings). </em>
              </dd>
              <dt>product.options</dt>
              <dd>
                <em>Returns a list of the product's options. By default, there is always at least one option, but there can be up to three. You can do a check to see how many Options a product may have by using the size filter.</em>
              </dd>
            </dl>
            <hr />
           <h3>Cart</h3>
            <dl>
              <dt>cart.item_count</dt>
              <dd>
                <em>Returns the number of items currently in the shopping cart. </em>
              </dd>
              <dt>cart.items</dt>
              <dd>
                <em>Returns all items in the shopping cart. Each one is of the type Line_Item. You will want to iterate through the return value (see example) </em>
              </dd>
              <dt>cart.total_price</dt>
              <dd>
                <em>Returns the total of all the prices added up in your shopping cart. </em>
              </dd>
              <dt>cart.total_weight</dt>
              <dd>
                <em>Returns the total weight of all items in the cart combined. Weight is always returned as grams. Use weight or weight_with_unit from the filter library to display the actual weight in your preferred unit system.</em>
              </dd>
              <dt>cart.note</dt>
              <dd>
                <em>allows you the option of adding a note field to your checkout template. Usage of this feature is very flexible. The general idea is that you simply define an input field named “note” in the form that submits to ”/cart” in cart.liquid.  </em>
              </dd>
              <dt>cart.attributes</dt>
              <dd>
                <em>The attributes property is similar to the note property above in that it is an optional field you can add to your shop’s checkout form. Simply define an input field named “attributes[]” and it will be captured automatically and displayed on the order detail page in your admin area.</em>
              </dd>
            </dl>
            <hr />
            <h3>Linklist</h3>
            <dl>
              <dt>linklist.id</dt>
              <dd>
                <em>Returns the id of this linklist </em>
              </dd>
              <dt>linklist.title</dt>
              <dd>
                <em>Returns the title of this linklist </em>
              </dd>
              <dt>linklist.handle</dt>
              <dd>
                <em>Returns the handle of this linklist </em>
              </dd>
              <dt>linklist.links</dt>
              <dd>
                <em>Returns a collection of this linklist's links.</em>
              </dd>
              <dt>linklist.object</dt>
              <dd>
                <em>The object the link points to. If the link points to a product {{link.product.title}} will, for example, print the name of the product. This is a very powerful feature and can be used for many complex liquid tasks.</em>
              </dd>
            </dl>
            <hr />
            <h3>Shop</h3>
            <dl>
              <dt>shop.name</dt>
              <dd>
                <em>Returns a string with the shop's name </em>
              </dd>
              <dt>shop.currency</dt>
              <dd>
                <em>Returns a string with the name of the currency (usually a 3 letter representation, e.g. USD) this shop uses. </em>
              </dd>
              <dt>shop.url</dt>
              <dd>
                <em>Returns a full url to your shop. Note: This depends on the primary address configured under preferences/DNS Administration </em>
              </dd>
              <dt>shop.domain</dt>
              <dd>
                <em>Returns the domain of your shop. Note: This depends on the primary address configured under preferences/DNS Administration </em>
              </dd>
              <dt>shop.products_count</dt>
              <dd>
                <em>Returns the number of products you have online. </em>
              </dd>
              <dt>shop.collections_count</dt>
              <dd>
                <em>Returns the number of collections you have created. </em>
              </dd>
            </dl>
             <ul class="section-options">
                 <li><a class="wiki" href="http://wiki.shopify.com/VariableReference" title="Variable reference - Shopify Wiki" >wiki</a></li>
                  <li><a class="move" href="http://everpixel.com"><img src="icn-move.png" width="11" height="11" alt="Icn Move" /></a></li>
               </ul>
            <hr />
            </div><!-- .block -->
          </div><!-- .col-3 -->
        </div><!-- .content -->
      </div><!-- #container -->
      </div><!-- #wrapper -->
      <div id="footer-wrapper">
        <div id="footer">
        <p>Don't worry we'll save your cheat sheet configuration for next time</p>
        <p><small>&hellip;and if anything goes wrong you can blame <a href="http://www.tajimaphotography.com/" title="Tajima Photography">John Tajima</a> because he helped me with the js cookie array. Thanks John.</small></p>
        </div><!-- #footer -->
      </div><!-- #footer-wrapper -->
      <script type="text/javascript">
      var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
      document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
      </script>
      <script type="text/javascript">
      try {
      var pageTracker = _gat._getTracker("UA-10154305-1");
      pageTracker._trackPageview();
      } catch(err) {}</script>
      <script type="text/javascript">Cufon.now();</script>
    </body>
    </html>